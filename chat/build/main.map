{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/data.js","webpack:///./src/index.js","webpack:///external \"apollo-server\"","webpack:///external \"faker\""],"names":["users","id","username","faker","internet","userName","email","messages","MESSAGE_SENT","pubsub","PubSub","typeDefs","gql","resolvers","Query","user","info","args","context","find","usr","Mutation","sendMessage","messageToSend","length","receiverId","message","to","senderId","from","push","publish","messageSent","Conversation","sender","receiver","Subscription","subscribe","withFilter","asyncIterator","payload","variables","server","ApolloServer","listen","then","_server","console","log","url"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import faker from \"faker\";\n\nexport const users = [\n  {\n    id: \"1\",\n    username: faker.internet.userName(),\n    email: faker.internet.email(),\n  },\n  {\n    id: \"2\",\n    username: faker.internet.userName(),\n    email: faker.internet.email(),\n  },\n  {\n    id: \"3\",\n    username: faker.internet.userName(),\n    email: faker.internet.email(),\n  },\n];\n","import { ApolloServer, gql, PubSub, withFilter } from \"apollo-server\";\nimport { users } from \"./data\";\n\nconst messages = [];\n\nconst MESSAGE_SENT = \"MESSAGE_SENT\";\n\nconst pubsub = new PubSub();\n\nconst typeDefs = gql`\n  type User {\n    id: ID!\n    username: String!\n    email: String\n  }\n\n  type Conversation {\n    id: ID!\n    receiver: User!\n    sender: User!\n    message: String!\n  }\n\n  type Query {\n    users: [User!]!\n    user(id: ID!): User!\n  }\n\n  input SendMessageInput {\n    message: String!\n    to: ID!\n    from: ID!\n  }\n\n  type Mutation {\n    sendMessage(message: SendMessageInput!): Conversation!\n  }\n\n  type Subscription {\n    messageSent(receiverId: ID!): Conversation!\n  }\n`;\n\nconst resolvers = {\n  Query: {\n    users: () => users,\n    user: (info, args, context) => users.find((usr) => usr.id === args.id),\n  },\n  Mutation: {\n    sendMessage: (info, args) => {\n      const messageToSend = {\n        id: messages.length + 1,\n        receiverId: args.message.to,\n        senderId: args.message.from,\n        message: args.message.message,\n      };\n\n      messages.push(messageToSend);\n      pubsub.publish(MESSAGE_SENT, { messageSent: messageToSend });\n      return messageToSend;\n    },\n  },\n  Conversation: {\n    sender: (info, args) => users.find((usr) => usr.id === info.senderId),\n    receiver: (info, args) => users.find((usr) => usr.id === info.receiverId),\n  },\n  Subscription: {\n    messageSent: {\n      subscribe: withFilter(\n        () => pubsub.asyncIterator([MESSAGE_SENT]),\n        (payload, variables) => {\n          return payload.messageSent.receiverId === variables.receiverId;\n        }\n      ),\n    },\n  },\n};\n\nconst server = new ApolloServer({ typeDefs, resolvers });\n\nserver.listen().then((_server) => {\n  console.log(\"Server ready at\", _server.url);\n});\n","module.exports = require(\"apollo-server\");","module.exports = require(\"faker\");"],"sourceRoot":""}